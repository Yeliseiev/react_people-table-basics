{"version":3,"sources":["components/HomePage/HomePage.tsx","api/api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/Loader/Loader.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/PageLink/PageLink.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","fetch","response","json","PersonLink","person","to","slug","classNames","sex","name","PeopleTable","people","activeSlug","useParams","findParent","parentName","parent","find","human","map","born","died","motherName","fatherName","Loader","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","getPeopleFromServer","peopleFromServer","useEffect","length","NotFoundPage","PageLink","title","isActive","NavBar","role","App","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.01dd1899.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from '../types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  await wait(500);\n  const response = await fetch(API_URL);\n\n  return response.json();\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <NavLink\n    to={`/people/${person.slug}`}\n    className={classNames({ 'has-text-danger': person.sex === 'f' })}\n  >\n    {person.name}\n  </NavLink>\n);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug: activeSlug } = useParams();\n\n  const findParent = (parentName: string | null) => {\n    const parent = people.find(human => human.name === parentName);\n\n    if (parent) {\n      return <PersonLink person={parent} />;\n    }\n\n    return parentName || '-';\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex, born, died, motherName, fatherName, slug,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              className={classNames(\n                { 'has-background-warning': slug === activeSlug },\n              )}\n              key={person.slug}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>{findParent(motherName)}</td>\n              <td>{findParent(fatherName)}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api/api';\nimport { PeopleTable } from '../PeopleTable';\nimport { Loader } from '../Loader';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const getPeopleFromServer = async () => {\n    try {\n      setIsLoading(true);\n      setIsError(false);\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !isError && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && !!people.length && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  title: string;\n};\n\nexport const PageLink: React.FC<Props> = ({ to, title }) => {\n  return (\n    <NavLink\n      to={`${to}`}\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport { PageLink } from '../PageLink';\n\nexport const NavBar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageLink to=\"/\" title=\"Home\" />\n        <PageLink to=\"people\" title=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}